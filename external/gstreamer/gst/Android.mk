LOCAL_PATH:= $(call my-dir)

include $(CLEAR_VARS)

GST_INDEX_SRC:= 	\
    gstindex.c		\
    gstindexfactory.c

GST_TRACE_SRC:= \
    gsttrace.c

GST_URI_SRC:= \
    gsturi.c

GST_REGISTRY_SRC:= \
    gstregistrybinary.c

GST_LOADSAVE_SRC:= \
    gstxml.c

LOCAL_SRC_FILES:= 			\
    gst.c            			\
    gstobject.c        			\
    gstbin.c        			\
    gstbuffer.c        			\
    gstbufferlist.c			\
    gstbus.c        			\
    gstcaps.c        			\
    gstchildproxy.c        		\
    gstclock.c        			\
    gstdatetime.c		\
    gstdebugutils.c        		\
    gstelement.c        		\
    gstelementfactory.c    		\
    gsterror.c        			\
    gstevent.c        			\
    gstfilter.c        			\
    gstformat.c        			\
    gstghostpad.c        		\
    gstindex.c 		\
    gstindexfactory.c 	\
    gstinfo.c        			\
    gstinterface.c        		\
    gstiterator.c        		\
    gstmessage.c        		\
    gstminiobject.c        		\
    gstpad.c        			\
    gstpadtemplate.c    		\
    gstparamspecs.c        		\
    gstpipeline.c        		\
    gstplugin.c        			\
    gstpluginfeature.c    		\
    gstpluginloader.c	\
    gstpoll.c        			\
    gstpreset.c          		\
    gstquark.c        			\
    gstquery.c        			\
    gstregistry.c        		\
    gstregistrychunks.c	\
    gstsegment.c        		\
    gststructure.c        		\
    gstsystemclock.c    		\
    gsttaglist.c        		\
    gsttagsetter.c        		\
    gsttask.c        			\
    gsttaskpool.c			\
    $(GST_TRACE_SRC)    		\
    gsttypefind.c        		\
    gsttypefindfactory.c    		\
    $(GST_URI_SRC)        		\
    gstutils.c        			\
    gstvalue.c        			\
    gstparse.c        			\
    $(GST_REGISTRY_SRC)    		\
    $(GST_LOADSAVE_SRC)     		

LOCAL_SHARED_LIBRARIES := 	\
    libxml2			\
    libglib-2.0             	\
    libgthread-2.0          	\
    libgmodule-2.0          	\
    libgobject-2.0		

LOCAL_MODULE:= libgstreamer-$(GST_MAJORMINOR)

# Handling autogenerated source codes

LOCAL_MODULE_CLASS := SHARED_LIBRARIES

intermediates := $(local-intermediates-dir)
GEN := $(intermediates)/grammar.c
$(GEN): PRIVATE_INPUT_FILE := $(LOCAL_PATH)/parse/grammar.y
$(GEN): GST_INPUT_HEADER_FILE := $(intermediates)/grammar.h
$(GEN): GST_OUTPUT_HEADER_FILE := $(intermediates)/grammar.tab.h
$(GEN): PRIVATE_CUSTOM_TOOL = bison -d -v -p_gst_parse_yy $(PRIVATE_INPUT_FILE) -o $@
$(GEN): $(LOCAL_PATH)/parse/grammar.y
	$(transform-generated-source)
	mv $@ $@.tmp && \
        echo '#ifdef HAVE_CONFIG_H' > $@.tmp2 && \
        echo '#include <config.h>' >> $@.tmp2 && \
        echo '#endif' >> $@.tmp2 && \
        cat $@.tmp >> $@.tmp2 && \
        rm $@.tmp && \
        mv $@.tmp2 $@ && \
	mv $(GST_INPUT_HEADER_FILE) $(GST_OUTPUT_HEADER_FILE)
LOCAL_GENERATED_SOURCES += $(GEN)

ifeq ($(PLATFORM_SDK_VERSION),3)
LOCAL_SRC_FILES += android/grammar.tab.c
endif
ifeq ($(PLATFORM_SDK_VERSION),4)
LOCAL_SRC_FILES += android/grammar.tab.c
endif

intermediates := $(local-intermediates-dir)
GEN := $(intermediates)/lex.c
$(GEN): PRIVATE_INPUT_FILE := $(LOCAL_PATH)/parse/parse.l
$(GEN): PRIVATE_CUSTOM_TOOL = flex -P_gst_parse_yy -o $@ $(PRIVATE_INPUT_FILE)
$(GEN): $(LOCAL_PATH)/parse/parse.l $(intermediates)/grammar.c
	mkdir -p $(dir $@)
	$(transform-generated-source)
	mv $@ $@.tmp && \
        echo '#ifdef HAVE_CONFIG_H' > $@.tmp2 && \
        echo '#include <config.h>' >> $@.tmp2 && \
        echo '#endif' >> $@.tmp2 && \
        cat $@.tmp >> $@.tmp2 && \
        rm $@.tmp && \
        mv $@.tmp2 $@
LOCAL_GENERATED_SOURCES += $(GEN)
ifeq ($(PLATFORM_SDK_VERSION),3)
LOCAL_SRC_FILES += android/lex._gst_parse_yy.c
endif
ifeq ($(PLATFORM_SDK_VERSION),4)
LOCAL_SRC_FILES += android/lex._gst_parse_yy.c
endif

intermediates := $(local-intermediates-dir)
GEN := $(intermediates)/gstmarshal.cc
$(GEN): PRIVATE_INPUT_FILE := $(LOCAL_PATH)/gstmarshal.list
$(GEN): PRIVATE_CUSTOM_TOOL = glib-genmarshal --body --prefix=gst_marshal $(PRIVATE_INPUT_FILE) > $@
$(GEN): $(LOCAL_PATH)/gstmarshal.list
	mkdir -p $(dir $@)
	$(transform-generated-source)
	mv $@ $@.tmp && \
        echo "#include \"gst_private.h\"" > $@.tmp2 && \
        echo "#include \"glib-object.h\"" >> $@.tmp2 && \
        echo "#include \"gstmarshal.h\"" >> $@.tmp2 && \
        cat $@.tmp >> $@.tmp2 && \
        rm $@.tmp && \
        mv $@.tmp2 $@
LOCAL_GENERATED_SOURCES += $(GEN)
LOCAL_SRC_FILES += android/gstmarshal.c

gst_headers =                   \
        $(LOCAL_PATH)/gst.h                   \
        $(LOCAL_PATH)/glib-compat.h           \
        $(LOCAL_PATH)/gstobject.h             \
        $(LOCAL_PATH)/gstbin.h                \
        $(LOCAL_PATH)/gstbuffer.h             \
        $(LOCAL_PATH)/gstbufferlist.h         \
        $(LOCAL_PATH)/gstbus.h                \
        $(LOCAL_PATH)/gstcaps.h               \
        $(LOCAL_PATH)/gstchildproxy.h         \
        $(LOCAL_PATH)/gstclock.h              \
        $(LOCAL_PATH)/gstcompat.h             \
        $(LOCAL_PATH)/gstdatetime.h           \
        $(LOCAL_PATH)/gstdebugutils.h         \
        $(LOCAL_PATH)/gstelement.h            \
        $(LOCAL_PATH)/gstelementfactory.h     \
        $(LOCAL_PATH)/gsterror.h              \
        $(LOCAL_PATH)/gstevent.h              \
        $(LOCAL_PATH)/gstfilter.h             \
        $(LOCAL_PATH)/gstformat.h             \
        $(LOCAL_PATH)/gstghostpad.h           \
        $(LOCAL_PATH)/gstindex.h              \
        $(LOCAL_PATH)/gstindexfactory.h       \
        $(LOCAL_PATH)/gstinfo.h               \
        $(LOCAL_PATH)/gstinterface.h          \
        $(LOCAL_PATH)/gstiterator.h           \
        $(LOCAL_PATH)/gstmacros.h             \
        $(LOCAL_PATH)/gstmessage.h            \
        $(LOCAL_PATH)/gstminiobject.h         \
        $(LOCAL_PATH)/gstpad.h                \
        $(LOCAL_PATH)/gstpadtemplate.h        \
        $(LOCAL_PATH)/gstparamspecs.h         \
        $(LOCAL_PATH)/gstpipeline.h           \
        $(LOCAL_PATH)/gstplugin.h             \
        $(LOCAL_PATH)/gstpluginfeature.h      \
        $(LOCAL_PATH)/gstpoll.h               \
        $(LOCAL_PATH)/gstpreset.h             \
        $(LOCAL_PATH)/gstquery.h              \
        $(LOCAL_PATH)/gstsegment.h            \
        $(LOCAL_PATH)/gststructure.h          \
        $(LOCAL_PATH)/gstsystemclock.h        \
        $(LOCAL_PATH)/gsttaglist.h            \
        $(LOCAL_PATH)/gsttagsetter.h          \
        $(LOCAL_PATH)/gsttask.h               \
        $(LOCAL_PATH)/gsttaskpool.h           \
        $(LOCAL_PATH)/gsttrace.h              \
        $(LOCAL_PATH)/gsttypefind.h           \
        $(LOCAL_PATH)/gsttypefindfactory.h    \
        $(LOCAL_PATH)/gsturi.h                \
        $(LOCAL_PATH)/gstutils.h              \
        $(LOCAL_PATH)/gstvalue.h              \
        $(LOCAL_PATH)/gstregistry.h           \
        $(LOCAL_PATH)/gstparse.h              \
        $(LOCAL_PATH)/gstxml.h

intermediates := $(local-intermediates-dir)
GEN := $(intermediates)/gstenumtypes.cc
$(GEN): $(gst_headers)
	mkdir -p $(dir $@)
	glib-mkenums \
        --fhead "#include \"gst_private.h\"\n#include <gst/gst.h>\n#define C_ENUM(v) ((gint) v)\n#define C_FLAGS(v) ((guint) v)\n " \
        --fprod "\n/* enumerations from \"@filename@\" */" \
        --vhead "GType\n@enum_name@_get_type (void)\n{\n  static gsize id = 0;\n  static const G@Type@Value values[] = {"     \
        --vprod "    { C_@TYPE@(@VALUENAME@), \"@VALUENAME@\", \"@valuenick@\" }," \
        --vtail "    { 0, NULL, NULL }\n  };\n\n  if (g_once_init_enter (&id)) {\n    GType tmp = g_@type@_register_static (\"@EnumName@\", values);\n    g_once_init_leave (&id, tmp);\n  }\n\n  return (GType) id;\n}" \
        $^ > $@
LOCAL_GENERATED_SOURCES += $(GEN)
LOCAL_SRC_FILES += android/gstenumtypes.c

GEN := $(TARGET_OUT_HEADERS)/gstreamer/gst/gstmarshal.h
$(GEN): PRIVATE_INPUT_FILE := $(LOCAL_PATH)/gstmarshal.list
$(GEN): PRIVATE_CUSTOM_TOOL = glib-genmarshal --header --prefix=gst_marshal $(PRIVATE_INPUT_FILE) > $@
$(GEN): $(LOCAL_PATH)/gstmarshal.list
	$(transform-generated-source)
all_copied_headers:$(GEN)

GEN := $(TARGET_OUT_HEADERS)/gstreamer/gst/gstenumtypes.h
$(GEN): $(gst_headers)
	mkdir -p $(dir $@)
	glib-mkenums \
        --fhead "#ifndef __GST_ENUM_TYPES_H__\n#define __GST_ENUM_TYPES_H__\n\n#include <glib-object.h>\n\nG_BEGIN_DECLS\n" \
        --fprod "\n/* enumerations from \"@filename@\" */\n" \
        --vhead "GType @enum_name@_get_type (void);\n#define GST_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n"         \
        --ftail "G_END_DECLS\n\n#endif /* __GST_ENUM_TYPES_H__ */" \
        $^ > $@
all_copied_headers:$(GEN)

LOCAL_MODULE_CLASS := SHARED_LIBRARIES

LOCAL_C_INCLUDES := 				\
	$(LOCAL_PATH)           		\
	$(GSTREAMER_TOP)			\
	$(GSTREAMER_TOP)/android       		\
	$(GSTREAMER_TOP)/android/gst  		\
	$(LOCAL_PATH)/parse           		\
	$(TARGET_OUT_HEADERS)/gstreamer     		\
	$(TARGET_OUT_HEADERS)/gstreamer/gst     		\
	$(GSTREAMER_DEP_INCLUDES)

LOCAL_CFLAGS := \
    -D_GNU_SOURCE                                   \
    -DG_LOG_DOMAIN=g_log_domain_gstreamer         \
    -DGST_MAJORMINOR=\""$(GST_MAJORMINOR)"\"     \
    -DGST_DISABLE_DEPRECATED                        \
    -DHAVE_CONFIG_H            

include $(BUILD_SHARED_LIBRARY)
